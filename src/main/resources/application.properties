#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#logging.level.com.zaxxer=DEBUG
#
### default connection pool
#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5
#
### PostgreSQL
#spring.datasource.url=jdbc:postgresql://alloc-pg-db.postgres.database.azure.com:5432/Sample
#spring.datasource.username=alloc_admin@alloc-pg-db
#spring.datasource.password=password123*
#
##drop n create table again, good for testing, commentEntity this in production
##spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true
#
##EventHub and Spring Kafka
#eventhub.topic=kubernetes-starter-topic

#External URL for sample external calls
externalUrl=https://jsonplaceholder.typicode.com/todos/1

#spring.kafka.bootstrap-servers=rpl-event-hub-ns-sandbox-01.servicebus.windows.net:9093
#
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="Endpoint=sb://rpl-event-hub-ns-sandbox-01.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=${EventHubsKey}";
#spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.properties.security.protocol=SASL_SSL
#
#spring.kafka.consumer.group-id=$Default
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#
##host/port of service deployed in Kubernetes cluster
#tenantServiceHostName=http://fnd-tenant-svc-service
#tenantServicePort=8080
